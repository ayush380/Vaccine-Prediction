a<-c(rep(c(4,5,6)),times=10)
a
a<-c(rep(c(4,5,6),times=10))
a
a<-c(rep(c(4,5,6),eachg=10))
a<-c(rep(c(4,5,6),each
=10))
a
a<-c(rep(c(4,5,6),each
=10))
a<-c(rep(c(4,5,6),eachg=10))
a
a<-c(rep(c(4,5,6),each
=10))
x<-c(1:25)
x
source(add.R)
getwd()
source('add.R')
a(4+5)
a(4,5)
a<-c(2,4,5,7,8)
a
a<-c(1:20)
a
a<-c(20:1)
a
a<-rep(c(20:1),times=2)
a
a<-rep(c(20:1),each=2)
a
x<-c(1:25)
2**5
c(2**x/x)
c((2**x)/x)
x<-c(1:25)
x
sum(2+3/x)
3/x
sum(3/x)
x<-c(1:100)
sum((x**3)+4*(x**2))
x<-c(10:100)
sum((x**3)+4*(x**2))
matrix(c(rep(10),times=15),c(rep(-10),times=15),c(rep(10),times=15),nrow=15)
matrix(c(rep(10),times=15),c(rep(-10),times=15),c(rep(10),times=15),nrow=15,ncol=3)
matrix(1,2,3,4,5,6,nrows=3,ncols=2)
matrix(c(1,2,3,4,5,6),nrows=3,ncols=2)
matrix(c(1,2,3,4,5,6),nrows=3,ncols=2)
matrix(c(1,2,3,4,5,6),nrow=3,ncol=2)
matrix(c(c(rep(10),times=15),c(rep(-10),times=15),c(rep(10),times=15)),nrow=15,ncol=3)
matrix(c(rep(10),times=15),rep(-10),times=15,rep(10),times=15)),nrow=15,ncol=3)
matrix(c(rep(10),times=15),rep(-10),times=15,rep(10),times=15),nrow=15,ncol=3)
matrix(c((rep(10),times=15),rep(-10),times=15,rep(10),times=15),nrow=15,ncol=3)
matrix(c((rep(10),times=15),rep((-10),times=15),rep(10),times=15),nrow=15,ncol=3)
matrix(c((rep(10),times=15),rep((-10),times=15),rep((10),times=15)),nrow=15,ncol=3)
matrix(c(c(rep(10),times=15),c(rep(-10),times=15),c(rep(10),times=15)),nrow=15,ncol=3)
matrix(c(c(rep(10),each=15),c(rep(-10),each=15),c(rep(10),each=15)),nrow=15,ncol=3)
a<-c(rep(10,times=10))
a
a<-c(rep(10,times=15))
a
b<-c(rep(-10,times=15))
b
c<-c(a,b,a)
c
matrix(c,nrow=15,ncol=15)
matrix(c,nrow=15,ncol=3)
m1=matrix(c,nrow=15,ncol=3)
f<c(rep(c(10,-10,10),times=3))
f<-c(rep(c(10,-10,10),times=3))
f
f<-c(rep(c(10,-10,10),times=15))
f
m2<-matrix(f,nrow=3,ncol=15)
m2
crossprod(m1,m2)
dim(m1)
dim(m2)
crossprod()
help(crossprod())
help(crossprod
)
crossprod(m2,m1)
tcrossprod(m1,m2)
tcrossprod(x=3,m1,m2)
m2
dim(m2)
dim(m1)
tcrossprod(m2,m1)
llow<-sample(letters,5)
uupp<-sample(LETTERS,5)
llow
sort(c(llow,uupp))
veclist<-list(x=1:5,y=2:6,z=3:7)
veclist
veclist$x
veclist$x[1]
veclist$x[5]
veclist$y[3]
sum(veclist$x)
veclist$norm=sample(1:100,10)
veclist
•	DFrame1<- data.frame(n1=c(1,2,3),s1=c(“Apple”,”Mango”,”Grapes”))
DFrame1<- data.frame(n1=c(1,2,3),s1=c(“Apple”,”Mango”,”Grapes”))
DFrame1<- data.frame(n1=c(1,2,3),s1=c(“Apple”,”Mango”,”Grapes”))
DFrame1<- data.frame(n1=c(1,2,3),s1=c(2,3,4))
DFrame1<- data.frame(n1=c(1,2,3),s1=c('s','S','f'))
DFrame1<- data.frame(n1=c(1,2,3),s1=c('st','S','f'))
DFrame1<- data.frame(n1=c(1,2,3),s1=c('Apple','S','f'))
DFrame1<- data.frame(n1=c(1,2,3),s1=c('Apple','Mango','Grapes'))
DFrame1
DFrame1<- data.frame(n1=c(1,2,3),s1=c('Apple','Mango',"Grapes"))
DFrame1<- data.frame(n1=c(1,2,3),s1=c('Apple',"Mango","Grapes"))
DFrame1<- data.frame(n1=c(1,2,3),s1=c("Apple","Mango","Grapes"))
DFrame1
DFr1<- data.frame(n1=c(1,2,3),s1=c("Apple","Mango","Grapes"))
iris
motor
mtcars
df<-mtcars
head(df)
df[0]
df[1]
rname
df[0]
df[,0]
df[,1]
df
df[,"Mazda RX4"]
df["Mazda RX4",]
df[,0]
a<-df[,0]
a
View(a)
list(a,df[a,'wt'],df[a,'mpg'])
list(df[a,'wt'],df[a,'mpg'])
list(b=df[a,'wt'],v=df[a,'mpg'])
a<-c(0:32)
list(b=df[a,'wt'],v=df[a,'mpg'])
mtcars
for(i in a)
{}
for(i in a)
{}
df[cyl]
df[,cyl]
df['cyl']
factor(df[,cyl])
factor(df[,'cyl'])
unique(df[,'cyl'])
u<-unique(df[,'cyl'])
for(i in range(u))
{}
for(i in range(u))
{x<-subset(df,cyl==u,select = mpg)
mean(x);
}
for(i in range(u))
{x<-subset(df,cyl==i,select = mpg);
mean(x);
}
x<-subset(df,cyl==u)
x<-subset(df,cyl==u[1])
x
mean(df[,mpg])
mean(df[,'mpg'])
for(i in range(u))
{x<-subset(df,cyl==i);
mean(x[,mpg])
}
x<-subset(df,cyl==u)
for(i in range(u))
+ {x<-subset(df,cyl==i);
+ mean(x[,'mpg']);
+ }
for(i in range(u))
{x<-subset(df,cyl==i);
mean(x[,'mpg']);
}
for(i in range(u))
{x<-subset(df,cyl==i);
b<-c(mean(x[,'mpg']));
}
b
for(i in range(u))
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']);
}
for(i in range(u))
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']);
}
for(i in range(u))
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']));
}
u
u
u[3]
subset(df,cyl=u[3])
x<-subset(df,cyl=u[3])
x
mean(x[.'cyl'])
mean(x[,'cyl'])
for(i in range(u))
{x<-subset(df,cyl==i);
print(i);
}
for(i in range(u))
{x<-subset(df,cyl==i);
print(i);
}
sort(u)
for(i in range(u))
{x<-subset(df,cyl==i);
print(i);
}
for(i in u)
{x<-subset(df,cyl==i);
print(i);
}
for(i in u)
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']));
}
for(i in u)
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']));
}
for(i in u)
{x<-subset(df,cyl==i);
print(mean(x[,'mpg']));
print(median(x[,'wt']));}
matrix(c(qsec=df[,'qsec'],gear=df[,'gear'],carb=df[,'carb']))
matrix(c(qsec=df[,'qsec'],gear=df[,'gear'],carb=df[,'carb']),nrow=3)
matrix(c(qsec=df[,'qsec'],gear=df[,'gear'],carb=df[,'carb']),ncol=3)
a<-"abc"
a[1]
a[2]
a[1,1]
substr(a,1,1)
c<-'qw'
d<-'erty'
c+D
c+D
c+D
c+d
paste(c,d)
paste(c,d,sep='')
install.packages(RMySQL)
install.packages('RMySQL')
library('RMySQL')
conn<-dbConnect(User='root',password='',host='localhost',port=3306,db='test')
conn<-dbConnect(MySQL(),User='root',password='',host='localhost',port=3306,db='test')
dbListTables(conn)
getQuery()
GetQuery()
dbGetQuery(conn,"create table arjun")
branc<-data.frame(brano=c(1,2,4),street=c("asd","sdfg","grt"))
branc
dbWriteTable(conn,"branch",branc)
dbListTables(conn)
dbGetQuery(conn,"select * from branch")
dbGetQuery(conn,"insert into branch values(1,'bfg'")
dbGetQuery(conn,"insert into branch values(1,'bfg')")
dbGetQuery(conn,"insert into branch values(4,1,'bfg')")
dbGetQuery(conn,"select * from branch")
dbSendQuery(conn,"insert into branch values(1,'bfg')")
dbSendQuery(conn,"insert into branch values(3,1,'bfg')")
dbGetQuery(conn,"select * from branch")
dbSendQuery(conn,"select * from branch")
dbGetQuery(conn,"select * from branch")
dbGetQuery(conn,"select * from branch")
dbGetQuery(conn,"select * from branch")
conn<-dbConnect(MySQL(),user='root',password='',host='localhost',port='3306',db='test')
conn<-dbConnect(MySQL(),user='root',password='',host='localhost',port=3306,db='test')
dbListTables(conn)
df<-data.frame(col1=c(1,NA,4,6),col2=c(3,5,7,NA))
df
isna(df)
is.na(df)
df[is.na(df)]<-99
df
df[df==99]<-NA
df
df==3
for i in range(1,2):
for i in range(1,2)
for(i in range(1,2))
df[is.na(df),i]=colMeans(i)
df[is.na(df),i]=colMeans(df[i])
df[is.na(df),i]=means(df[i])
df[is.na(df),i]=mean(df[i])
df[is.na(df),i]=mean(df[,i])
for(i in range(1,2))
df[is.na(df),i]=mean(df[,i])
df[,x]
x<-c(1,2,3,4)
df[,x]
df[x,]
for(i in range(1,2))
df[,i]
for(i in range(1,2))
{
print(df[,i]);
}
for(i in range(1,2))
{
m<-mean(df[,i]);
}
for(i in range(1,2))
m<-mean(df[,i],na.rm = TRUE);
print(m);
for(i in range(1,2)){
m<-mean(df[,i],na.rm = TRUE);
print(m);
}
for(i in range(1,2)){
df[is.na(df[,i])]=mean(df[,i])
}
for(i in range(1,2)){
df[is.na(df[,i])]<-mean(df[,i])
}
is.na(df[,1])
df[is.na(df[,1])]
df[is.na(df[,1])==TRUE]
df
df<-data.frame(col1=c(1,NA,4,6),col2=c(3,5,7,NA))
df[is.na(df[,1])]
for(i in range(1,2))
{
df[is.na[df,i])]<-mean(df[,i],na.rm = TRUE);
df
for(i in range(1,2))
{
df[is.na[df,i]]<-mean(df[,i],na.rm = TRUE);
}
df
for(i in range(1,2))
{
df[is.na(df[,i])]<-mean(df[,i],na.rm = TRUE);
}
df
df[,1]
x<-c(34,12,78,23,50)
y<-c(1,2,3,4,5)
plot(x,y)
axis(3,pos=4)
axis(1,at=x,labels=y,pos=3,tick=TRUE)
library(caret)
help('traincontrol')
help('trainControl')
help('train')
mycar
mtcar
library(mtcar)
iris
df<-iris
df$Species<-as.factor(df$Species)
df
df$Species
index<-createDataPartition(df$Species,p=0.8,list=FALSE)
dtrain<-df[index,]
dtest<-df[-index,]
help('trainControl')
trctrl<-trainControl(method = 'repeatedcv',number = 10,times=3)
trctrl<-trainControl(method = 'repeatedcv',number = 10,repeats = 3)
xtrain<-dtrain[,-5]
xtest<-dtrain[,5]
ytrain<-xtest
xtest<-0
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl)
dfit
test_p<-predict(dfit,newdata=xtest)
test_p<-predict(dfit,newdata=dtest)
confusionMatrix(test_p,dtest$Species)
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=)
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"))
dfit
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'rpart')
dfit
help('train')
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'treebag')
dfit
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'rpart')
dfit
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'cv')
trctrl<-trainControl(method = 'cv',number = 10,repeats = 3)
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'nb')
dfit<-train(x=xtrain,y=ytrain,trControl = trctrl,parms=list(split="gini"),method = 'nb')
dfit
help('kmeans')
library(shiny)
setwd("C:/Users/Ayush Srivastava/Desktop/formatted_minor - Copy")
runApp()
runApp()
getwd()
library(rsconnect)
deployApp(appName = 'Vaccine')
deployApp(appName = 'Vaccine')
deployApp(appName = 'Vaccine')
